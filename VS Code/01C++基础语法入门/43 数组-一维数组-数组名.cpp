#include<iostream>
// #include<cstdint>  // 引入uintptr_t类型 msvc编译器需要引入此头文件

using namespace std;

int main() {

	//数组名用途
	//1、可以获取整个数组占用内存空间大小
	int arr[10] = { 1,2,3,4,5,6,7,8,9,10 };

	cout << "整个数组所占内存空间为： " << sizeof(arr) << endl;
	cout << "每个元素所占内存空间为： " << sizeof(arr[0]) << endl;
	cout << "数组的元素个数为： " << sizeof(arr) / sizeof(arr[0]) << endl;

	//2、可以通过数组名获取到数组首地址
	cout << "数组首地址为： " << arr << endl;  //十六进制
	// cout << "数组首地址为： " << (int)arr << endl;  //十进制
	// cout << "数组中第一个元素地址为： " << (int)&arr[0] << endl;  //&取址
	// cout << "数组中第二个元素地址为： " << (int)&arr[1] << endl;

	//这里将指针转换为 int 类型进行输出，这在某些编译器上可能会导致问题，因为指针和整数的大小可能不同，
	//尤其是在64位系统中，指针通常是64位的，而 int 通常是32位的。这种转换可能会导致数据截断或丢失精度。

	//uintptr_t类型用于存储指针的无符号整数表示，可以用来存储指针的地址。
	cout << "数组首地址为： " << (uintptr_t)arr << endl;  //十进制
	cout << "数组中第一个元素地址为： " << (uintptr_t)&arr[0] << endl;  //&取址
	cout << "数组中第二个元素地址为： " << (uintptr_t)&arr[1] << endl;

	//arr = 100; 错误，数组名是常量，因此不可以赋值
 
	system("pause");

	return 0;
}
// 输出
// 整个数组所占内存空间为： 40
// 每个元素所占内存空间为： 4
// 数组的元素个数为： 10
// 数组首地址为： 0x62fe20
// 数组首地址为： 6487584
// 数组中第一个元素地址为： 6487584
// 数组中第二个元素地址为： 6487588